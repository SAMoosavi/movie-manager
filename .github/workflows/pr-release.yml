name: Release Branch Build & Tag

on:
  pull_request: # change to merge
    branches:
      - 'release/*'

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Check version consistency
        id: get_version
        run: |
          TAURI_VERSION=$(jq -r .version src-tauri/tauri.conf.json)
          CARGO_VERSION=$(grep '^version =' src-tauri/Cargo.toml | awk '{print $3}' | tr -d '"')
          PACKAGE_VERSION=$(jq -r .version package.json)
          if [ "$TAURI_VERSION" != "$CARGO_VERSION" ] || [ "$TAURI_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Version mismatch: tauri=$TAURI_VERSION cargo=$CARGO_VERSION package=$PACKAGE_VERSION"
            exit 1
          fi
          echo "version=$TAURI_VERSION" >> $GITHUB_OUTPUT

  build:
    needs: check_version
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install JS dependencies
        run: pnpm install

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Rust dependencies
        run: cargo fetch
        working-directory: src-tauri

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Build Tauri app
        run: pnpm tauri build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.exe
            src-tauri/target/release/bundle/**/*.rpm

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.check_version.outputs.version }}_pre
          name: Pre-release v${{ needs.check_version.outputs.version }}
          prerelease: true
          files: |
            artifacts/**/*.AppImage
            artifacts/**/*.dmg
            artifacts/**/*.deb
            artifacts/**/*.exe
            artifacts/**/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
